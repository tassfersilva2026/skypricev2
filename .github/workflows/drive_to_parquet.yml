name: Pull & Extract (TESTE 3 PDFs)

on:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: pull-extract-test
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      PYTHONUTF8: "1"
      TZ: America/Sao_Paulo

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas==2.* pdfplumber==0.* tqdm==4.* openpyxl==3.* pyarrow==17.* google-api-python-client==2.* google-auth==2.*

      - name: Compute run timestamp (America/Sao_Paulo)
        run: echo "RUN_TS=$(TZ=America/Sao_Paulo date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV

      # --- grava a chave do Service Account em sa.json (com validação) ---
      - name: Write Service Account JSON
        run: |
          if [ -z "${{ secrets.GDRIVE_SERVICE_ACCOUNT_JSON }}" ]; then
            echo "ERRO: configure o secret GDRIVE_SERVICE_ACCOUNT_JSON (conteúdo do JSON do Service Account)"; exit 1
          fi
          cat > sa.json <<'JSON'
          ${{ secrets.GDRIVE_SERVICE_ACCOUNT_JSON }}
          JSON

      - name: Validate sa.json
        run: |
          python - << 'PY'
          import json; json.load(open('sa.json')); print("Service Account JSON OK")
          PY

      # --- PULL: baixa só 3 PDFs do Drive (e não repete nomes que já constam na base) ---
      - name: Pull PDFs do Drive (TESTE: só 3 arquivos)
        env:
          MAX_FILES: "3"  # <- pega no máx. 3 mais recentes
        run: |
          if [ -z "${{ secrets.DRIVE_FOLDER_ID }}" ]; then
            echo "ERRO: configure o secret DRIVE_FOLDER_ID (ID da pasta no Drive)"; exit 1
          fi
          python scripts/drive_pull.py "${{ secrets.DRIVE_FOLDER_ID }}"
          echo "---- inbox baixada ----"
          ls -lah inbox || true

      # --- EXTRAÇÃO: processa só 3 PDFs e gera Parquet+XLS por rodada ---
      - name: Extrair e gerar Parquet+XLS (TESTE: só 3)
        env:
          PDF_DIR: inbox
          WRITE_SINGLE_RUN_PARQUET: "1"
          WRITE_XLS_ARTIFACT: "1"
          TZ_NAME: "America/Sao_Paulo"
          RUN_TS: ${{ env.RUN_TS }}
        run: |
          python scripts/PDF27.pyw --once --limit 3
          echo "---- data/ ----"
          ls -lah data || true
          echo "---- out/ ----"
          ls -lah out || true

      # --- Artefatos: XLS do run e todos Parquets gerados ---
      - name: Upload XLS (artefato do run)
        uses: actions/upload-artifact@v4
        with:
          name: OFERTAS_XLS_${{ env.RUN_TS }}
          path: |
            out/*.xlsx
          if-no-files-found: warn
          retention-days: 7

      - name: Upload Parquets (rodada e consolidados)
        uses: actions/upload-artifact@v4
        with:
          name: OFERTAS_PARQUETS_${{ env.RUN_TS }}
          path: |
            data/*.parquet
            out/*.parquet
          if-no-files-found: warn
          retention-days: 7
