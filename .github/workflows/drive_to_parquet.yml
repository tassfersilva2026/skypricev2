name: drive-to-parquet

on:
  schedule:
    - cron: "*/30 * * * *"   # a cada 30 minutos
  workflow_dispatch:

permissions:
  contents: write

env:
  TZ: America/Sao_Paulo

jobs:
  run:
    runs-on: ubuntu-latest
    concurrency:
      group: drive-to-parquet
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup Python
        uses: actions/setup-python@v5
        with: { python-version: "3.12" }

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write Service Account JSON
        run: |
          echo "${{ secrets.GDRIVE_SERVICE_ACCOUNT_JSON }}" > sa.json

      - name: Ensure folders
        run: |
          mkdir -p inbox data out state

      - name: Compute run timestamp (America/Sao_Paulo)
        run: echo "RUN_TS=$(TZ=America/Sao_Paulo date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV

      - name: Pull PDFs do Drive (desde 26/08/2025 14:00:00 SP) sem repetir
        env:
          DRIVE_FOLDER_ID: ${{ secrets.DRIVE_FOLDER_ID }}
          CUTOVER_SP: "2025-08-26T14:00:00"
          TZ_NAME: "America/Sao_Paulo"
        run: |
          python scripts/drive_pull.py

      - name: Extrair e gerar Parquet+XLS por rodada (sem repetir)
        env:
          PDF_DIR: inbox
          WRITE_SINGLE_RUN_PARQUET: "1"
          WRITE_XLS_ARTIFACT: "1"
          TZ_NAME: "America/Sao_Paulo"
          RUN_TS: ${{ env.RUN_TS }}
        run: |
          python scripts/PDF27.pyw --once

      - name: Upload XLS artifact
        uses: actions/upload-artifact@v4
        with:
          name: OFERTAS_${{ env.RUN_TS }}.xlsx
          path: out/OFERTAS_RUN_${{ env.RUN_TS }}.xlsx
          if-no-files-found: error

      - name: Commit & Push (somente data/ + state/)
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add data/*.parquet state/*.json || true
            git commit -m "chore(parquet): OFERTAS @ ${GITHUB_RUN_NUMBER}"
            git push
            echo "Changes pushed."
          else
            echo "No changes to commit."
          fi

      - name: Limpeza inbox (artefatos efÃªmeros)
        if: always()
        run: rm -rf inbox || true
